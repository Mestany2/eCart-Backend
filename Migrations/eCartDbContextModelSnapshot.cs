// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using eCart_Backend;

#nullable disable

namespace eCart_Backend.Migrations
{
    [DbContext(typeof(eCartDbContext))]
    partial class eCartDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("eCart_Backend.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryImage = "https://p2-ofp.static.pub/ShareResource/na/subseries/hero/lenovo-3i-chromebook-15-inch.png",
                            CategoryName = "Laptops"
                        },
                        new
                        {
                            Id = 2,
                            CategoryImage = "https://i5.walmartimages.com/seo/Beats-Studio-Pro-Wireless-Headphones-Black_482fa5f9-4478-43a6-84ef-5abc2de71109.2d23bdd7708ce99a60e99d6a3750171c.png",
                            CategoryName = "Headphones"
                        },
                        new
                        {
                            Id = 3,
                            CategoryImage = "https://d12mivgeuoigbq.cloudfront.net/magento-media/members/h0026-nicks-appliance/floating_appliances.png",
                            CategoryName = "Appliances"
                        },
                        new
                        {
                            Id = 4,
                            CategoryImage = "https://img.xfinitymobile.com/image/upload/c_fit,f_auto,q_auto,fl_lossy/v1696609940/client/v2/images/Apple-iPhone-15-Pro-BAU-Shop-Apple-LP-Placement/Shop_Banner_1280.png",
                            CategoryName = "Phones"
                        },
                        new
                        {
                            Id = 5,
                            CategoryImage = "https://img.bbystatic.com/BestBuy_US/store/ee/2017/cam/pr/sol-11219-nikon/sol-11219-nikon-d610-dslr-camera-rev.png",
                            CategoryName = "Cameras"
                        });
                });

            modelBuilder.Entity("eCart_Backend.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 4,
                            Description = "First Item in the store",
                            Image = "https://phones.mintmobile.com/wp-content/uploads/2023/09/Apple_iPhone_15_Pro_Titanium_Blue_PDP_Image.png",
                            Name = "Iphone",
                            Price = 14.99m,
                            Quantity = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Second Item in the store",
                            Image = "https://pdp.com/cdn/shop/files/052-003_PS5_GAMBITWIRELESS_LEFTQUARTERSHOT.png?v=1696884972&width=640",
                            Name = "Headset",
                            Price = 40.99m,
                            Quantity = 12,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 5,
                            Description = "Third Item in the store",
                            Image = "https://i1.adis.ws/i/canon/15_eos_90d_bk_thefront_ef-s18-135mm_3.5-5.6isusm_square_6bd191e26825499fb5fe88e57a763f7a",
                            Name = "Camera",
                            Price = 414.99m,
                            Quantity = 15,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("eCart_Backend.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("OrderTotal")
                        .HasColumnType("numeric");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("integer");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTotal = 159.55m,
                            PaymentId = 1,
                            StatusId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderDate = new DateTime(2023, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTotal = 145.01m,
                            PaymentId = 1,
                            StatusId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            OrderDate = new DateTime(2023, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTotal = 252.22m,
                            PaymentId = 2,
                            StatusId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            OrderDate = new DateTime(2023, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderTotal = 314.25m,
                            PaymentId = 2,
                            StatusId = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("eCart_Backend.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Credit Card"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Cash"
                        });
                });

            modelBuilder.Entity("eCart_Backend.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Open"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Processing"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Shipped"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Complete"
                        });
                });

            modelBuilder.Entity("eCart_Backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isSeller")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Street",
                            Email = "jack@yahoo.com",
                            Name = "Jack Smith",
                            Phone = "615-445-8855",
                            Uid = "4d5256236asd6",
                            isSeller = true
                        },
                        new
                        {
                            Id = 2,
                            Address = "856 Road",
                            Email = "Mdaniel@gmail.com",
                            Name = "Mike Daniel",
                            Phone = "615-645-2415",
                            Uid = "wLR4RTEAKyUr6K8w9ufj1IZM1hC3",
                            isSeller = false
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Circle",
                            Email = "sbutler@comcast.net",
                            Name = "Steve Butler",
                            Phone = "615-746-3641",
                            Uid = "4d56a2526sd6",
                            isSeller = true
                        });
                });

            modelBuilder.Entity("ItemOrder", b =>
                {
                    b.Property<int>("itemsId")
                        .HasColumnType("integer");

                    b.Property<int>("ordersId")
                        .HasColumnType("integer");

                    b.HasKey("itemsId", "ordersId");

                    b.HasIndex("ordersId");

                    b.ToTable("ItemOrder");
                });

            modelBuilder.Entity("eCart_Backend.Models.Item", b =>
                {
                    b.HasOne("eCart_Backend.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCart_Backend.Models.User", "User")
                        .WithMany("Items")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eCart_Backend.Models.Order", b =>
                {
                    b.HasOne("eCart_Backend.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.HasOne("eCart_Backend.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCart_Backend.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ItemOrder", b =>
                {
                    b.HasOne("eCart_Backend.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("itemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCart_Backend.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("ordersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCart_Backend.Models.User", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
